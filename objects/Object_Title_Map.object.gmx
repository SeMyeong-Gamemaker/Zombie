<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Sprite_Map_One</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Map = 1;
Text_Spin = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Text_Spin += 2;

if Map = 1 { object_set_sprite( self, Sprite_Map_Two ); }
if Map = 2 { object_set_sprite( self, Sprite_Map_One ); }
if Map = 3 { object_set_sprite( self, Sprite_Map_Three ); }


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Map = 1 { room_goto( Room_Two ); }
if Map = 2 { room_goto( Room_One ); }
if Map = 3 { room_goto( Room_Three ); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text_colour( x + lengthdir_x ( 8, 270 + Text_Spin ), y - 150 + lengthdir_y ( 8, 270 + Text_Spin ), "SELECT MAP", c_black, c_black, c_black, c_black, 1 );
draw_text_colour( x + lengthdir_x ( 6, 270 + Text_Spin ), y - 150 + lengthdir_y ( 6, 270 + Text_Spin ), "SELECT MAP", c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1 );
draw_text_colour( x + lengthdir_x ( 4, 270 + Text_Spin ), y - 150 + lengthdir_y ( 4, 270 + Text_Spin ), "SELECT MAP", c_gray, c_gray, c_gray, c_gray, 1 );
draw_text_colour( x + lengthdir_x ( 2, 270 + Text_Spin ), y - 150 + lengthdir_y ( 2, 270 + Text_Spin ), "SELECT MAP", c_silver, c_silver, c_silver, c_silver, 1 );
draw_text_colour( x, y - 150, "SELECT MAP", c_white, c_white, c_white, c_white, 1 );

if Map = 1
{
   draw_sprite_ext( Sprite_Map_Two, -1, x + lengthdir_x ( 16, 270 + Text_Spin ), y + lengthdir_y ( 16, 270 + Text_Spin ), 1, 1, 0, c_black, 1 );
   draw_sprite_ext( Sprite_Map_Two, -1, x + lengthdir_x ( 12, 270 + Text_Spin ), y + lengthdir_y ( 12, 270 + Text_Spin ), 1, 1, 0, c_dkgray, 1 );
   draw_sprite_ext( Sprite_Map_Two, -1, x + lengthdir_x ( 8, 270 + Text_Spin ), y + lengthdir_y ( 8, 270 + Text_Spin ), 1, 1, 0, c_gray, 1 );
   draw_sprite_ext( Sprite_Map_Two, -1, x + lengthdir_x ( 4, 270 + Text_Spin ), y + lengthdir_y ( 4, 270 + Text_Spin ), 1, 1, 0, c_silver, 1 );
   draw_sprite_ext( Sprite_Map_Two, -1, x, y, 1, 1, 0, c_white, 1 );
   draw_text_colour( x + lengthdir_x ( 8, 270 + Text_Spin ), y + 150 + lengthdir_y ( 8, 270 + Text_Spin ), "PILLARS", c_black, c_black, c_black, c_black, 1 );
   draw_text_colour( x + lengthdir_x ( 6, 270 + Text_Spin ), y + 150 + lengthdir_y ( 6, 270 + Text_Spin ), "PILLARS", c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1 );
   draw_text_colour( x + lengthdir_x ( 4, 270 + Text_Spin ), y + 150 + lengthdir_y ( 4, 270 + Text_Spin ), "PILLARS", c_gray, c_gray, c_gray, c_gray, 1 );
   draw_text_colour( x + lengthdir_x ( 2, 270 + Text_Spin ), y + 150 + lengthdir_y ( 2, 270 + Text_Spin ), "PILLARS", c_silver, c_silver, c_silver, c_silver, 1 );
   draw_text_colour( x, y + 150, "PILLARS", c_white, c_white, c_white, c_white, 1 );
   draw_text_colour( x + lengthdir_x ( 8, 270 + Text_Spin ), y + 200 + lengthdir_y ( 8, 270 + Text_Spin ), "EASY", c_black, c_black, c_black, c_black, 1 );
   draw_text_colour( x + lengthdir_x ( 6, 270 + Text_Spin ), y + 200 + lengthdir_y ( 6, 270 + Text_Spin ), "EASY", c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1 );
   draw_text_colour( x + lengthdir_x ( 4, 270 + Text_Spin ), y + 200 + lengthdir_y ( 4, 270 + Text_Spin ), "EASY", c_gray, c_gray, c_gray, c_gray, 1 );
   draw_text_colour( x + lengthdir_x ( 2, 270 + Text_Spin ), y + 200 + lengthdir_y ( 2, 270 + Text_Spin ), "EASY", c_silver, c_silver, c_silver, c_silver, 1 );
   draw_text_colour( x, y + 200, "EASY", c_lime, c_lime, c_lime, c_lime, 1 );
}
if Map = 2
{
   draw_sprite_ext( Sprite_Map_One, -1, x + lengthdir_x ( 16, 270 + Text_Spin ), y + lengthdir_y ( 16, 270 + Text_Spin ), 1, 1, 0, c_black, 1 );
   draw_sprite_ext( Sprite_Map_One, -1, x + lengthdir_x ( 12, 270 + Text_Spin ), y + lengthdir_y ( 12, 270 + Text_Spin ), 1, 1, 0, c_dkgray, 1 );
   draw_sprite_ext( Sprite_Map_One, -1, x + lengthdir_x ( 8, 270 + Text_Spin ), y + lengthdir_y ( 8, 270 + Text_Spin ), 1, 1, 0, c_gray, 1 );
   draw_sprite_ext( Sprite_Map_One, -1, x + lengthdir_x ( 4, 270 + Text_Spin ), y + lengthdir_y ( 4, 270 + Text_Spin ), 1, 1, 0, c_silver, 1 );
   draw_sprite_ext( Sprite_Map_One, -1, x, y, 1, 1, 0, c_white, 1 );
   draw_text_colour( x + lengthdir_x ( 8, 270 + Text_Spin ), y + 150 + lengthdir_y ( 8, 270 + Text_Spin ), "SMALL PILLARS", c_black, c_black, c_black, c_black, 1 );
   draw_text_colour( x + lengthdir_x ( 6, 270 + Text_Spin ), y + 150 + lengthdir_y ( 6, 270 + Text_Spin ), "SMALL PILLARS", c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1 );
   draw_text_colour( x + lengthdir_x ( 4, 270 + Text_Spin ), y + 150 + lengthdir_y ( 4, 270 + Text_Spin ), "SMALL PILLARS", c_gray, c_gray, c_gray, c_gray, 1 );
   draw_text_colour( x + lengthdir_x ( 2, 270 + Text_Spin ), y + 150 + lengthdir_y ( 2, 270 + Text_Spin ), "SMALL PILLARS", c_silver, c_silver, c_silver, c_silver, 1 );
   draw_text_colour( x, y + 150, "SMALL PILLARS", c_white, c_white, c_white, c_white, 1 );
   draw_text_colour( x + lengthdir_x ( 8, 270 + Text_Spin ), y + 200 + lengthdir_y ( 8, 270 + Text_Spin ), "NORMAL", c_black, c_black, c_black, c_black, 1 );
   draw_text_colour( x + lengthdir_x ( 6, 270 + Text_Spin ), y + 200 + lengthdir_y ( 6, 270 + Text_Spin ), "NORMAL", c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1 );
   draw_text_colour( x + lengthdir_x ( 4, 270 + Text_Spin ), y + 200 + lengthdir_y ( 4, 270 + Text_Spin ), "NORMAL", c_gray, c_gray, c_gray, c_gray, 1 );
   draw_text_colour( x + lengthdir_x ( 2, 270 + Text_Spin ), y + 200 + lengthdir_y ( 2, 270 + Text_Spin ), "NORMAL", c_silver, c_silver, c_silver, c_silver, 1 );
   draw_text_colour( x, y + 200, "NORMAL", c_yellow, c_yellow, c_yellow, c_yellow, 1 );
}
if Map = 3
{
   draw_sprite_ext( Sprite_Map_Three, -1, x + lengthdir_x ( 16, 270 + Text_Spin ), y + lengthdir_y ( 16, 270 + Text_Spin ), 1, 1, 0, c_black, 1 );
   draw_sprite_ext( Sprite_Map_Three, -1, x + lengthdir_x ( 12, 270 + Text_Spin ), y + lengthdir_y ( 12, 270 + Text_Spin ), 1, 1, 0, c_dkgray, 1 );
   draw_sprite_ext( Sprite_Map_Three, -1, x + lengthdir_x ( 8, 270 + Text_Spin ), y + lengthdir_y ( 8, 270 + Text_Spin ), 1, 1, 0, c_gray, 1 );
   draw_sprite_ext( Sprite_Map_Three, -1, x + lengthdir_x ( 4, 270 + Text_Spin ), y + lengthdir_y ( 4, 270 + Text_Spin ), 1, 1, 0, c_silver, 1 );
   draw_sprite_ext( Sprite_Map_Three, -1, x, y, 1, 1, 0, c_white, 1 );
   draw_text_colour( x + lengthdir_x ( 8, 270 + Text_Spin ), y + 150 + lengthdir_y ( 8, 270 + Text_Spin ), "EMPTY", c_black, c_black, c_black, c_black, 1 );
   draw_text_colour( x + lengthdir_x ( 6, 270 + Text_Spin ), y + 150 + lengthdir_y ( 6, 270 + Text_Spin ), "EMPTY", c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1 );
   draw_text_colour( x + lengthdir_x ( 4, 270 + Text_Spin ), y + 150 + lengthdir_y ( 4, 270 + Text_Spin ), "EMPTY", c_gray, c_gray, c_gray, c_gray, 1 );
   draw_text_colour( x + lengthdir_x ( 2, 270 + Text_Spin ), y + 150 + lengthdir_y ( 2, 270 + Text_Spin ), "EMPTY", c_silver, c_silver, c_silver, c_silver, 1 );
   draw_text_colour( x, y + 150, "EMPTY", c_white, c_white, c_white, c_white, 1 );
   draw_text_colour( x + lengthdir_x ( 8, 270 + Text_Spin ), y + 200 + lengthdir_y ( 8, 270 + Text_Spin ), "HARD", c_black, c_black, c_black, c_black, 1 );
   draw_text_colour( x + lengthdir_x ( 6, 270 + Text_Spin ), y + 200 + lengthdir_y ( 6, 270 + Text_Spin ), "HARD", c_dkgray, c_dkgray, c_dkgray, c_dkgray, 1 );
   draw_text_colour( x + lengthdir_x ( 4, 270 + Text_Spin ), y + 200 + lengthdir_y ( 4, 270 + Text_Spin ), "HARD", c_gray, c_gray, c_gray, c_gray, 1 );
   draw_text_colour( x + lengthdir_x ( 2, 270 + Text_Spin ), y + 200 + lengthdir_y ( 2, 270 + Text_Spin ), "HARD", c_silver, c_silver, c_silver, c_silver, 1 );
   draw_text_colour( x, y + 200, "HARD", c_red, c_red, c_red, c_red, 1 );
}

if Map = 1 { draw_sprite_ext( Sprite_Map_Two, -1, x, y, 1, 1, 0, c_white, 1 ); }
if Map = 2 { draw_sprite_ext( Sprite_Map_One, -1, x, y, 1, 1, 0, c_white, 1 ); }
if Map = 3 { draw_sprite_ext( Sprite_Map_Three, -1, x, y, 1, 1, 0, c_white, 1 ); }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
